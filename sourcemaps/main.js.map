{"version":3,"sources":["main.coffee"],"names":[],"mappings":"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","file":"main.js","sourceRoot":"/source/","sourcesContent":["\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'HOLLERITH/CODEC'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\n#...........................................................................................................\nCND.shim()\n\n\n#-----------------------------------------------------------------------------------------------------------\nlast_unicode_chr        = ( String.fromCharCode 0xdbff ) + ( String.fromCharCode 0xdfff )\n### should always be 3 in modern versions of NodeJS: ###\nmax_bytes_per_chr       = Math.max ( new Buffer \"\\uffff\" ).length, ( new Buffer last_unicode_chr ).length / 2\nrbuffer_min_size        = 1024\nrbuffer_delta_size      = 1024\nrbuffer_max_size        = 65536\nrbuffer_new_size        = Math.floor ( rbuffer_max_size + rbuffer_min_size ) / 2\nrbuffer                 = new Buffer rbuffer_min_size\nbuffer_too_short_error  = new Error \"buffer too short\"\n\n#-----------------------------------------------------------------------------------------------------------\n@[ 'typemarkers' ]  = {}\n#...........................................................................................................\ntm_lo               = @[ 'typemarkers'  ][ 'lo'         ] = 0x00\ntm_null             = @[ 'typemarkers'  ][ 'null'       ] = 'B'.codePointAt 0\ntm_false            = @[ 'typemarkers'  ][ 'false'      ] = 'C'.codePointAt 0\ntm_true             = @[ 'typemarkers'  ][ 'true'       ] = 'D'.codePointAt 0\ntm_list             = @[ 'typemarkers'  ][ 'list'       ] = 'E'.codePointAt 0\ntm_date             = @[ 'typemarkers'  ][ 'date'       ] = 'G'.codePointAt 0\ntm_ninfinity        = @[ 'typemarkers'  ][ 'ninfinity'  ] = 'J'.codePointAt 0\ntm_nnumber          = @[ 'typemarkers'  ][ 'nnumber'    ] = 'K'.codePointAt 0\ntm_pnumber          = @[ 'typemarkers'  ][ 'pnumber'    ] = 'L'.codePointAt 0\ntm_pinfinity        = @[ 'typemarkers'  ][ 'pinfinity'  ] = 'M'.codePointAt 0\ntm_text             = @[ 'typemarkers'  ][ 'text'       ] = 'T'.codePointAt 0\ntm_hi               = @[ 'typemarkers'  ][ 'hi'         ] = 0xff\n\n#-----------------------------------------------------------------------------------------------------------\n@[ 'bytecounts' ]   = {}\n#...........................................................................................................\nbytecount_singular  = @[ 'bytecounts'   ][ 'singular'   ] = 1\nbytecount_number    = @[ 'bytecounts'   ][ 'number'     ] = 9\nbytecount_date      = @[ 'bytecounts'   ][ 'date'       ] = bytecount_number + 1\n\n#-----------------------------------------------------------------------------------------------------------\n@[ 'sentinels' ]  = {}\n#...........................................................................................................\n### http://www.merlyn.demon.co.uk/js-datex.htm ###\n@[ 'sentinels' ][ 'firstdate' ] = new Date -8640000000000000\n@[ 'sentinels' ][ 'lastdate'  ] = new Date +8640000000000000\n\n#-----------------------------------------------------------------------------------------------------------\n@[ 'keys' ]  = {}\n#...........................................................................................................\n@[ 'keys' ][ 'lo' ] = new Buffer [ @[ 'typemarkers' ][ 'lo' ] ]\n@[ 'keys' ][ 'hi' ] = new Buffer [ @[ 'typemarkers' ][ 'hi' ] ]\n\n#-----------------------------------------------------------------------------------------------------------\ngrow_rbuffer = ( delta_size ) ->\n  delta_size ?= rbuffer_delta_size\n  return null if delta_size < 1\n  # warn \"growing rbuffer (#{delta_size} bytes)\"\n  new_result_buffer = new Buffer rbuffer.length + delta_size\n  rbuffer.copy new_result_buffer\n  rbuffer     = new_result_buffer\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\nrelease_extraneous_rbuffer_bytes = ->\n  rbuffer = new Buffer rbuffer_new_size if rbuffer.length > rbuffer_max_size\n  return null\n\n\n#===========================================================================================================\n# VARIANTS\n#-----------------------------------------------------------------------------------------------------------\nwrite_singular = ( idx, value ) ->\n  throw buffer_too_short_error unless rbuffer.length >= idx + bytecount_singular\n  if      value is null   then typemarker = tm_null\n  else if value is false  then typemarker = tm_false\n  else if value is true   then typemarker = tm_true\n  else throw new Error \"unable to encode value of type #{CND.type_of value}\"\n  rbuffer[ idx ] = typemarker\n  return idx + bytecount_singular\n\n#-----------------------------------------------------------------------------------------------------------\nread_singular = ( buffer, idx ) ->\n  switch typemarker = buffer[ idx ]\n    when tm_null  then value = null\n    when tm_false then value = false\n    when tm_true  then value = true\n    else throw new Error \"unable to decode 0x#{typemarker.toString 16} at index #{idx} (#{rpr buffer})\"\n  return [ idx + bytecount_singular, value, ]\n\n\n#===========================================================================================================\n# NUMBERS\n#-----------------------------------------------------------------------------------------------------------\nwrite_number = ( idx, number ) ->\n  throw buffer_too_short_error unless rbuffer.length >= idx + bytecount_number\n  if number < 0\n    type    = tm_nnumber\n    number  = -number\n  else\n    type    = tm_pnumber\n  rbuffer[ idx ] = type\n  rbuffer.writeDoubleBE number, idx + 1\n  _invert_buffer rbuffer, idx if type is tm_nnumber\n  return idx + bytecount_number\n\n#-----------------------------------------------------------------------------------------------------------\nwrite_infinity = ( idx, number ) ->\n  throw buffer_too_short_error unless rbuffer.length >= idx + bytecount_singular\n  rbuffer[ idx ] = if number is -Infinity then tm_ninfinity else tm_pinfinity\n  return idx + bytecount_singular\n\n#-----------------------------------------------------------------------------------------------------------\nread_nnumber = ( buffer, idx ) ->\n  throw new Error \"not a negative number at index #{idx}\" unless buffer[ idx ] is tm_nnumber\n  copy = _invert_buffer ( new Buffer buffer.slice idx, idx + bytecount_number ), 0\n  return [ idx + bytecount_number, -( copy.readDoubleBE 1 ), ]\n\n#-----------------------------------------------------------------------------------------------------------\nread_pnumber = ( buffer, idx ) ->\n  throw new Error \"not a positive number at index #{idx}\" unless buffer[ idx ] is tm_pnumber\n  return [ idx + bytecount_number, buffer.readDoubleBE idx + 1, ]\n\n#-----------------------------------------------------------------------------------------------------------\n_invert_buffer = ( buffer, idx ) ->\n  buffer[ i ] = ~buffer[ i ] for i in [ idx + 1 .. idx + 8 ]\n  return buffer\n\n\n#===========================================================================================================\n# DATES\n#-----------------------------------------------------------------------------------------------------------\nwrite_date = ( idx, date ) ->\n  number          = +date\n  rbuffer[ idx ]  = tm_date\n  new_idx         = write_number idx + 1, number\n  return new_idx\n\n#-----------------------------------------------------------------------------------------------------------\nread_date = ( buffer, idx ) ->\n  throw new Error \"not a date at index #{idx}\" unless buffer[ idx ] is tm_date\n  switch type = buffer[ idx + 1 ]\n    when tm_nnumber    then [ idx, value, ] = read_nnumber    buffer, idx + 1\n    when tm_pnumber    then [ idx, value, ] = read_pnumber    buffer, idx + 1\n    else throw new Error \"unknown date type marker 0x#{type.toString 16} at index #{idx}\"\n  return [ idx, ( new Date value ), ]\n\n\n#===========================================================================================================\n# TEXTS\n#-----------------------------------------------------------------------------------------------------------\nwrite_text = ( idx, text ) ->\n  text                              = text.replace /\\x01/g, '\\x01\\x02'\n  text                              = text.replace /\\x00/g, '\\x01\\x01'\n  length_estimate                   = max_bytes_per_chr * text.length + 3\n  grow_rbuffer length_estimate - rbuffer.length - idx - 1\n  rbuffer[ idx                    ] = tm_text\n  byte_count                        = rbuffer.write text, idx + 1\n  rbuffer[ idx + byte_count + 1   ] = tm_lo\n  return idx + byte_count + 2\n\n#-----------------------------------------------------------------------------------------------------------\nread_text = ( buffer, idx ) ->\n  # urge '©J2d6R', buffer[ idx ], buffer[ idx ] is tm_text\n  throw new Error \"not a text at index #{idx}\" unless buffer[ idx ] is tm_text\n  stop_idx = idx\n  loop\n    stop_idx += +1\n    break if ( byte = buffer[ stop_idx ] ) is tm_lo\n    throw new Error \"runaway string at index #{idx}\" unless byte?\n  R = buffer.toString 'utf-8', idx + 1, stop_idx\n  R = R.replace /\\x01\\x02/g, '\\x01'\n  R = R.replace /\\x01\\x01/g, '\\x00'\n  return [ stop_idx + 1, R, ]\n\n\n#===========================================================================================================\n# LISTS\n#-----------------------------------------------------------------------------------------------------------\n### TAINT remove is_top_level if not used ###\nread_list = ( buffer, idx, is_top_level ) ->\n  # urge '©J2d6R', buffer[ idx ], buffer[ idx ] is tm_text\n  # throw new Error \"unable to read nested list at index #{idx}\" unless is_top_level\n  throw new Error \"not a list at index #{idx}\" unless buffer[ idx ] is tm_list\n  R     = []\n  idx  += +1\n  loop\n    break if ( byte = buffer[ idx ] ) is tm_lo\n    [ idx, value, ] = _decode buffer, idx, false, true\n    R.push value[ 0 ]\n    throw new Error \"runaway list at index #{idx}\" unless byte?\n  return [ idx + 1, R, ]\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\nwrite = ( idx, value ) ->\n  switch type = CND.type_of value\n    when 'text'       then return write_text     idx, value\n    when 'number'     then return write_number   idx, value\n    when 'jsinfinity' then return write_infinity idx, value\n    when 'jsdate'     then return write_date     idx, value\n  #.........................................................................................................\n  return write_singular  idx, value\n\n\n#===========================================================================================================\n# PUBLIC API\n#-----------------------------------------------------------------------------------------------------------\n@encode = ( key, extra_byte ) ->\n  rbuffer.fill 0x99\n  throw new Error \"expected a list, got a #{type}\" unless ( type = CND.type_of key ) is 'list'\n  idx = _encode key, 0, true\n  #.........................................................................................................\n  if extra_byte?\n    rbuffer[ idx ]  = extra_byte\n    idx            += +1\n  #.........................................................................................................\n  R = new Buffer idx\n  rbuffer.copy R, 0, 0, idx\n  release_extraneous_rbuffer_bytes()\n  #.........................................................................................................\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n### TAINT remove is_top_level if not used ###\n_encode = ( key, idx, is_top_level ) ->\n  last_element_idx = key.length - 1\n  # debug '©GP4RE', rpr key\n  for element, element_idx in key\n    loop\n      try\n        if CND.isa_list element\n          # unless is_top_level\n          #   throw new Error \"unable to encode nested list\"\n          rbuffer[ idx ]  = tm_list\n          idx            += +1\n          for sub_element in element\n            idx = _encode [ sub_element, ], idx, false\n          rbuffer[ idx ]  = tm_lo\n          idx            += +1\n        else\n          idx = write idx, element\n        break\n      catch error\n        unless error is buffer_too_short_error\n          key_rpr = []\n          for element in key\n            if CND.isa_jsbuffer element\n              key_rpr.push \"#{@rpr_of_buffer null, key[ 2 ]}\"\n            else\n              key_rpr.push rpr element\n          warn \"detected problem with key [ #{rpr key_rpr.join ', '} ]\"\n          throw error\n        grow_rbuffer()\n  #.........................................................................................................\n  return idx\n\n#-----------------------------------------------------------------------------------------------------------\n@decode = ( buffer ) ->\n  return ( _decode buffer, 0, true, false )[ 1 ]\n\n#-----------------------------------------------------------------------------------------------------------\n### TAINT remove is_top_level if not used ###\n_decode = ( buffer, idx, is_top_level, single ) ->\n  R         = []\n  last_idx  = buffer.length - 1\n  loop\n    break if idx > last_idx\n    switch type = buffer[ idx ]\n      when tm_list       then [ idx, value, ] = read_list       buffer, idx, is_top_level\n      when tm_text       then [ idx, value, ] = read_text       buffer, idx\n      when tm_nnumber    then [ idx, value, ] = read_nnumber    buffer, idx\n      when tm_ninfinity  then [ idx, value, ] = [ idx + 1, -Infinity, ]\n      when tm_pnumber    then [ idx, value, ] = read_pnumber    buffer, idx\n      when tm_pinfinity  then [ idx, value, ] = [ idx + 1, +Infinity, ]\n      when tm_date       then [ idx, value, ] = read_date       buffer, idx\n      else                    [ idx, value, ] = read_singular   buffer, idx\n    R.push value\n    break if single\n  #.........................................................................................................\n  return [ idx, R ]\n\n\n# debug ( require './dump' ).rpr_of_buffer null, buffer = @encode [ 'aaa', [], ]\n# debug '©tP5xQ', @decode buffer\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n@encodings =\n\n  #.........................................................................................................\n  dbcs2: \"\"\"\n    ⓪①②③④⑤⑥⑦⑧⑨⑩⑪⑫⑬⑭⑮⑯⑰⑱⑲⑳㉑㉒㉓㉔㉕㉖㉗㉘㉙㉚㉛\n    ㉜！＂＃＄％＆＇（）＊＋，－．／０１２３４５６７８９：；＜＝＞？\n    ＠ＡＢＣＤＥＦＧＨＩＪＫＬＭＮＯＰＱＲＳＴＵＶＷＸＹＺ［＼］＾＿\n    ｀ａｂｃｄｅｆｇｈｉｊｋｌｍｎｏｐｑｒｓｔｕｖｗｘｙｚ｛｜｝～㉠\n    ㉝㉞㉟㊱㊲㊳㊴㊵㊶㊷㊸㊹㊺㊻㊼㊽㊾㊿㋐㋑㋒㋓㋔㋕㋖㋗㋘㋙㋚㋛㋜㋝\n    ㋞㋟㋠㋡㋢㋣㋤㋥㋦㋧㋨㋩㋪㋫㋬㋭㋮㋯㋰㋱㋲㋳㋴㋵㋶㋷㋸㋹㋺㋻㋼㋽\n    ㋾㊊㊋㊌㊍㊎㊏㊐㊑㊒㊓㊔㊕㊖㊗㊘㊙㊚㊛㊜㊝㊞㊟㊠㊡㊢㊣㊤㊥㊦㊧㊨\n    ㊩㊪㊫㊬㊭㊮㊯㊰㊀㊁㊂㊃㊄㊅㊆㊇㊈㊉㉈㉉㉊㉋㉌㉍㉎㉏⓵⓶⓷⓸⓹〓\n    \"\"\"\n  #.........................................................................................................\n  aleph: \"\"\"\n    БДИЛЦЧШЭЮƆƋƏƐƔƥƧƸψŐőŒœŊŁłЯɔɘɐɕəɞ\n    ␣!\"#$%&'()*+,-./0123456789:;<=>?\n    @ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_\n    `abcdefghijklmnopqrstuvwxyz{|}~ω\n    ΓΔΘΛΞΠΣΦΨΩαβγδεζηθικλμνξπρςστυφχ\n    Ж¡¢£¤¥¦§¨©ª«¬Я®¯°±²³´µ¶·¸¹º»¼½¾¿\n    ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞß\n    àáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\n    \"\"\"\n  #.........................................................................................................\n  rdctn: \"\"\"\n    ∇≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡\n    ␣!\"#$%&'()*+,-./0123456789:;<=>?\n    @ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_\n    `abcdefghijklmnopqrstuvwxyz{|}~≡\n    ∃∃∃∃∃∃∃∃∃∃∃∃∃∃∃∃∃∃∃∃∃∃∃∃∃∃∃∃∃∃∃∃\n    ∃∃¢£¤¥¦§¨©ª«¬Я®¯°±²³´µ¶·¸¹º»¼½¾¿\n    ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞß\n    àáâãäåæçèéêëìíîïðñò≢≢≢≢≢≢≢≢≢≢≢≢Δ\n    \"\"\"\n\n\n#-----------------------------------------------------------------------------------------------------------\n@rpr_of_buffer = ( db, buffer, encoding ) ->\n  return ( rpr buffer ) + ' ' +  @_encode_buffer db, buffer, encoding\n\n#-----------------------------------------------------------------------------------------------------------\n@_encode_buffer = ( db, buffer, encoding = 'rdctn' ) ->\n  ### TAINT use switch, emit error if `encoding` not list or known key ###\n  encoding = @encodings[ encoding ] unless CND.isa_list encoding\n  return ( encoding[ buffer[ idx ] ] for idx in [ 0 ... buffer.length ] ).join ''\n\n#-----------------------------------------------------------------------------------------------------------\n@_compile_encodings = ->\n  #.........................................................................................................\n  chrs_of = ( text ) ->\n    text = text.split /([\\ud800-\\udbff].|.)/\n    return ( chr for chr in text when chr isnt '' )\n  #.........................................................................................................\n  for name, encoding of @encodings\n    encoding = chrs_of encoding.replace /\\n+/g, ''\n    unless ( length = encoding.length ) is 256\n      throw new Error \"expected 256 characters, found #{length} in encoding #{rpr name}\"\n    @encodings[ name ] = encoding\n  return null\n@_compile_encodings()\n"]}